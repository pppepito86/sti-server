{"version":3,"sources":["rest.js","AuthContext.js","useAsync.js","useInterval.js","AppContext.js","ip.js","TitleContext.js","components/Header.js","components/ContestCountdown.js","components/Sidebar.js","components/Footer.js","components/Verdict.js","components/ScoreBoardBox.js","components/Scoreboard.js","components/Task.js","components/LoadingContent.js","useTask.js","components/TaskContent.js","components/Submission.js","components/SubmissionContent.js","components/PdfContent.js","components/ScoreboardContent.js","components/DashboardContent.js","components/Questions.js","components/QuestionsContent.js","components/Modal.js","components/admin/Workers.js","components/admin/AdminDashboardContent.js","pages/PageTemplate.js","components/admin/AdminHeader.js","components/admin/AdminSidebar.js","pages/AdminPageTemplate.js","ProtectedRoute.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["REST_URL","json","url","a","sendRequest","response","blob","post","formData","sendPostRequest","type","token","localStorage","getItem","sendRequestWithToken","fetch","headers","responseType","method","body","AuthContext","React","createContext","useAuth","useContext","useAsync","getMethod","params","useState","value","setValue","error","setError","loading","setLoading","useEffect","result","getResource","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","AppContext","AppProvider","children","setIp","Date","now","setNow","time","setTime","contestIsRunning","setContestIsRunning","contestIsFinished","setContestIsFinished","contestIsStarted","setContestIsStarted","unreadQuestions","setUnreadQuestions","questions","setQuestions","unreadAnnouncements","setUnreadAnnouncements","announcements","setAnnouncements","shouldUpdateTime","setShouldUpdateTime","timeData","shouldUpdateQuestions","setShouldUpdateQuestions","questionsData","shouldUpdateAnnouncements","setShouldUpdateAnnouncements","announcementsData","updateQuestions","updateAnnouncements","i","length","seen","markQuestionSeen","FormData","append","markAnnouncementSeen","timeTillStart","timeTillEnd","Promise","resolve","reject","RTCPeerConnection","window","webkitRTCPeerConnection","mozRTCPeerConnection","rtc","iceServers","createDataChannel","reliable","onicecandidate","evt","candidate","addr","sdp","finalIP","split","forEach","line","indexOf","parts","grepSDP","createOffer","offerDesc","setLocalDescription","e","console","warn","then","ip","startTime","endTime","slice","filter","q","answer","Provider","markQuestionsSeen","markAnnouncementsSeen","useApp","TitleContext","useTitle","Header","title","shortTitle","location","useLocation","className","to","style","width","backgroundColor","pathname","onClick","icon","faBell","faEnvelope","logout","faSignOutAlt","ContestCountdown","color","textAlign","fontSize","date","daysInHours","Sidebar","tid","useParams","tasks","data-widget","faHome","faQuestion","map","t","key","number","faFile","name","target","faBook","Footer","href","Verdict","verdict","v","display","marginRight","ScoreBoardBox","points","maxPoints","hovered","ratio","getColor","image","getImage","undefined","padding","whiteSpace","verticalAlign","fontWeight","borderColor","backgroundImage","cursor","withRouter","hover","setHover","placeholder","rank","task1","task2","task3","total","row","onMouseEnter","onMouseLeave","marginLeft","FileSaver","require","contest","data","pdf","Blob","saveAs","TaskSubmitFile","nextSubmissionTime","history","useHistory","file","setFile","preventDefault","log","push","sid","encType","action","htmlFor","onChange","files","accept","SubmitButton","submit","TaskSubmitCode","code","setCode","trim","maxLength","height","lineHeight","border","currentTime","setCurrentTime","secondsLeft","parseInt","disabled","TaskNoSubmissions","download","memory","borderTop","borderBottom","marginTop","data-toggle","position","submissions","size","tableLayout","wordWrap","s","moment","unix","upload_time","format","LoadingContent","minHeight","faSpinner","useTask","task","setTask","setSubmissions","setNextSubmissionTime","timeLeft","timeToSubmit","some","TaskContent","reduce","prev","Math","max","justifyContent","Task","SubmissionOverview","submission","SubmissionDetails","tests","test","replace","SubmissionSource","source","SubmissionContent","refresh","setRefresh","Submission","PdfContent","setPdf","URL","createObjectURL","setResource","ScoreboardContent","Scoreboard","Announcements","reverse","topic","announcement","TasksInfo","feedback","TasksPoints","publicScore","maxPublicScore","DashboardContent","ShowQuestion","question","answer_time","SendQuestion","setTopic","setQuestion","submitQuestion","rows","QuestionsContent","Modal","aria-label","aria-hidden","message","data-dismiss","EnsureWorkers","class","ListWorkers","workers","worker","AdminDashboardContent","PageTemplate","content","AdminHeader","AdminSidebar","AdminPageTemplate","path","render","Login","username","setUsername","password","setPassword","login","handleLogin","useCallback","fullTitle","background","transition","OTransition","WebkitTransition","margin","paddingTop","faUser","faKey","App","isAuth","ProtectedRoute","Boolean","hostname","match","ReactDOM","document","hasOwnProperty","setIsAuth","btoa","JSON","stringify","ok","user","setItem","display_name","removeItem","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a6602ea.chunk.js","sourcesContent":["//const REST_URL = \"http://35.158.118.93:8081/api/\";\r\nconst REST_URL = \"http://localhost/api/\";\r\n\r\nexport async function json(url) {\r\n    const response = await sendRequest(url, \"json\");\r\n    return await response.json();\r\n}\r\n\r\nexport async function blob(url) {\r\n    const response = await sendRequest(url, \"blob\");\r\n    return await response.blob();\r\n}\r\n\r\nexport async function post(url, formData) {\r\n    const response = await sendPostRequest(url, formData);\r\n    return await response.json();\r\n}\r\n\r\nasync function sendRequest(url, type) {\r\n    const token = localStorage.getItem(\"token\");\r\n    return sendRequestWithToken(url, type, token);\r\n}\r\n\r\nexport function sendRequestWithToken(url, type, token) {\r\n    return fetch(REST_URL + url, {\r\n        headers: {\r\n            'Authorization': `Basic ${token}`\r\n        },\r\n        responseType: type\r\n    });\r\n}\r\n\r\nasync function sendPostRequest(url, formData) {\r\n    const token = localStorage.getItem(\"token\");\r\n    return fetch(REST_URL + url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Basic ${token}`\r\n        },\r\n        body: formData,\r\n        responseType: 'json'\r\n    });\r\n}\r\n","import React, { useState } from 'react';\r\nimport { sendRequestWithToken } from './rest'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nconst AuthProvider = ({children}) => {\r\n\r\n    const [isAuth, setIsAuth] = useState(localStorage.hasOwnProperty('token'));\r\n\r\n    async function login(username, password) {\r\n        const token = window.btoa(username + ':' + password);\r\n        const response = await sendRequestWithToken('user', 'json', token);\r\n        console.log(JSON.stringify(response));\r\n        if (!response.ok) return;\r\n\r\n        const user = await response.json();\r\n\r\n        localStorage.setItem(\"name\", user.display_name);\r\n        localStorage.setItem(\"contest\", user.contest);\r\n        localStorage.setItem(\"token\", token);\r\n        setIsAuth(true);\r\n    }\r\n\r\n    function logout() {\r\n        localStorage.removeItem('display_name');\r\n        localStorage.removeItem('contest');\r\n        localStorage.removeItem('token');\r\n        setIsAuth(false);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuth: isAuth,\r\n                login: login,\r\n                logout: logout\r\n            }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nconst useAuth = () => React.useContext(AuthContext)\r\n\r\nexport { AuthProvider, useAuth }\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction useAsync(getMethod, url, params) {\r\n    const [value, setValue] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function getResource() {\r\n            try {\r\n                setLoading(true);\r\n                const result = await getMethod(url);\r\n                setValue(result);\r\n            } catch (e) {\r\n                setError(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        getResource();\r\n    }, [getMethod, url, ...params]);\r\n  \r\n    return { value, error, loading };\r\n}\r\n\r\nexport default useAsync;","import { useRef, useEffect } from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    });\r\n  \r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n  \r\n        if (delay !== null) {\r\n            const id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nexport default useInterval;","import React, { useState, useEffect } from 'react';\r\nimport useAsync from './useAsync'\r\nimport useInterval from './useInterval'\r\nimport { json, post } from './rest'\r\nimport { getLocalIp, getLocalIPs } from './ip'\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [error, setError] = useState();\r\n\r\n    const [ip, setIp] = useState();\r\n\r\n    const [now, setNow] = useState(Date.now());\r\n    const [time, setTime] = useState();\r\n    const [contestIsRunning, setContestIsRunning] = useState(false);\r\n    const [contestIsFinished, setContestIsFinished] = useState(false);\r\n    const [contestIsStarted, setContestIsStarted] = useState(false);\r\n    \r\n    const [unreadQuestions, setUnreadQuestions] = useState(0);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [unreadAnnouncements, setUnreadAnnouncements] = useState(0);\r\n    const [announcements, setAnnouncements] = useState([]);\r\n\r\n    const [shouldUpdateTime, setShouldUpdateTime] = useState(false);\r\n    const { value: timeData } = useAsync(json, 'time', [shouldUpdateTime]);\r\n\r\n    const [shouldUpdateQuestions, setShouldUpdateQuestions] = useState(false);\r\n    const { value: questionsData } = useAsync(json, 'questions', [shouldUpdateQuestions]);\r\n\r\n    const [shouldUpdateAnnouncements, setShouldUpdateAnnouncements] = useState(false);\r\n    const { value: announcementsData } = useAsync(json, 'announcements', [shouldUpdateAnnouncements]);\r\n\r\n    function updateTime() {\r\n        setShouldUpdateTime(shouldUpdateTime => !shouldUpdateTime);\r\n    }\r\n\r\n    function updateQuestions() {\r\n        setShouldUpdateQuestions(shouldUpdateQuestions => !shouldUpdateQuestions);\r\n    }\r\n\r\n    function updateAnnouncements() {\r\n        setShouldUpdateAnnouncements(shouldUpdateAnnouncements => !shouldUpdateAnnouncements);\r\n    }\r\n\r\n    async function markQuestionsSeen() {\r\n        for (var i = 0; i < questions.length; i++) {\r\n            if (questions[i].seen) continue;\r\n            await markQuestionSeen(questions[i].id);\r\n        }\r\n        updateQuestions();\r\n    }\r\n\r\n    const markQuestionSeen = async (id) => {\r\n        const formData = new FormData();\r\n        formData.append('id', id);\r\n        await post(`questions/seen`, formData);\r\n    }\r\n\r\n    async function markAnnouncementsSeen() {\r\n        for (var i = 0; i < announcements.length; i++) {\r\n            if (announcements[i].seen) continue;\r\n            await markAnnouncementSeen(announcements[i].id);\r\n        }\r\n        updateAnnouncements();\r\n    }\r\n\r\n    const markAnnouncementSeen = async (id) => {\r\n        const formData = new FormData();\r\n        formData.append('id', id);\r\n        await post(`announcements/seen`, formData);\r\n    }\r\n\r\n    useInterval(() => {\r\n        setNow(Date.now());\r\n        updateTime();\r\n        updateQuestions();\r\n        updateAnnouncements();\r\n    }, 10000);\r\n    \r\n    useInterval(() => {\r\n        if (!contestIsRunning) setContestIsRunning(true);\r\n        if (!contestIsFinished) setContestIsFinished(false);\r\n        if (!contestIsStarted) setContestIsStarted(true);\r\n    }, time && !contestIsRunning && !contestIsFinished ? time.timeTillStart : null);\r\n\r\n    useInterval(() => {\r\n        if (contestIsRunning) setContestIsRunning(false);\r\n        if (!contestIsFinished) setContestIsFinished(true);\r\n        if (!contestIsStarted) setContestIsStarted(true);\r\n    }, time && contestIsRunning ? time.timeTillEnd : null);\r\n\r\n    useEffect(() => {\r\n        getLocalIp().then(function(ip) {\r\n            setIp(ip);\r\n\t\t});\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (timeData) {\r\n            setTime({...timeData,\r\n                startTime: Date.now() + timeData.timeTillStart,\r\n                endTime: now + timeData.timeTillEnd\r\n            });\r\n            if (!contestIsRunning && timeData.timeTillStart <= 0 && timeData.timeTillEnd > 0) {\r\n                setContestIsRunning(true);\r\n            }\r\n            if (contestIsRunning && !(timeData.timeTillStart <= 0 && timeData.timeTillEnd > 0)) {\r\n                setContestIsRunning(false);\r\n            }\r\n            if (!contestIsFinished && timeData.timeTillEnd <= 0) setContestIsFinished(true);\r\n            if (contestIsFinished && timeData.timeTillEnd > 0) setContestIsFinished(false);\r\n            if (!contestIsStarted && (contestIsRunning || contestIsFinished)) setContestIsStarted(true);\r\n            if (contestIsStarted && !(contestIsRunning || contestIsFinished)) setContestIsStarted(false);\r\n        }\r\n    }, [timeData]);\r\n\r\n    useEffect(() => {\r\n        if (questionsData) {\r\n            setQuestions(questionsData);\r\n            setUnreadQuestions(questionsData.slice().filter(q => q.answer).filter(q => !q.seen).length);\r\n        }\r\n    }, [questionsData]);\r\n\r\n    useEffect(() => {\r\n        if (announcementsData) {\r\n            setAnnouncements(announcementsData);\r\n            setUnreadAnnouncements(announcementsData.slice().filter(a => !a.seen).length);\r\n        }\r\n    }, [announcementsData]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                error: error,\r\n                setError: setError,\r\n                time: time,\r\n                contestIsRunning: contestIsRunning,\r\n                contestIsFinished: contestIsFinished,\r\n                contestIsStarted: contestIsStarted,\r\n                questions: questions,\r\n                unreadQuestions: unreadQuestions,\r\n                markQuestionsSeen: markQuestionsSeen,\r\n                updateQuestions: updateQuestions,\r\n                announcements: announcements,\r\n                unreadAnnouncements: unreadAnnouncements,\r\n                updateAnnouncements: updateAnnouncements,\r\n                markAnnouncementsSeen: markAnnouncementsSeen\r\n            }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nconst useApp = () => React.useContext(AppContext)\r\n\r\nexport { AppProvider, useApp }\r\n","export function getLocalIp() {\r\n    return new Promise(function(resolve, reject) {\r\n      // NOTE: window.RTCPeerConnection is \"not a constructor\" in FF22/23\r\n      var RTCPeerConnection = /*window.RTCPeerConnection ||*/ window.webkitRTCPeerConnection || window.mozRTCPeerConnection;\r\n      if (!RTCPeerConnection) {\r\n        reject('Your browser does not support this API');\r\n      }\r\n      \r\n      var rtc = new RTCPeerConnection({iceServers:[]});\r\n      var addrs = {};\r\n      addrs[\"0.0.0.0\"] = false;\r\n      \r\n      function grepSDP(sdp) {\r\n          var hosts = [];\r\n          var finalIP = '';\r\n          sdp.split('\\r\\n').forEach(function (line) { // c.f. http://tools.ietf.org/html/rfc4566#page-39\r\n            if (~line.indexOf(\"a=candidate\")) {     // http://tools.ietf.org/html/rfc4566#section-5.13\r\n                  var parts = line.split(' '),        // http://tools.ietf.org/html/rfc5245#section-15.1\r\n                      addr = parts[4],\r\n                      type = parts[7];\r\n                  if (type === 'host') {\r\n                      finalIP = addr;\r\n                  }\r\n              } else if (~line.indexOf(\"c=\")) {       // http://tools.ietf.org/html/rfc4566#section-5.7\r\n                  var parts = line.split(' '),\r\n                      addr = parts[2];\r\n                  finalIP = addr;\r\n              }\r\n          });\r\n          return finalIP;\r\n      }\r\n      \r\n      if (1 || window.mozRTCPeerConnection) {      // FF [and now Chrome!] needs a channel/stream to proceed\r\n          rtc.createDataChannel('', {reliable:false});\r\n      };\r\n      \r\n      rtc.onicecandidate = function (evt) {\r\n          // convert the candidate to SDP so we can run it through our general parser\r\n          // see https://twitter.com/lancestout/status/525796175425720320 for details\r\n          if (evt.candidate) {\r\n            var addr = grepSDP(\"a=\"+evt.candidate.candidate);\r\n            resolve(addr);\r\n          }\r\n      };\r\n      rtc.createOffer(function (offerDesc) {\r\n          rtc.setLocalDescription(offerDesc);\r\n      }, function (e) { console.warn(\"offer failed\", e); });\r\n    });\r\n  }\r\n\r\n  export function getLocalIPs(callback) {\r\n    var ips = [];\r\n\r\n    var RTCPeerConnection = window.RTCPeerConnection ||\r\n        window.webkitRTCPeerConnection || window.mozRTCPeerConnection;\r\n\r\n    var pc = new RTCPeerConnection({\r\n        // Don't specify any stun/turn servers, otherwise you will\r\n        // also find your public IP addresses.\r\n        iceServers: []\r\n    });\r\n    // Add a media line, this is needed to activate candidate gathering.\r\n    pc.createDataChannel('');\r\n    \r\n    // onicecandidate is triggered whenever a candidate has been found.\r\n    pc.onicecandidate = function(e) {\r\n        if (!e.candidate) { // Candidate gathering completed.\r\n            pc.close();\r\n            callback(ips);\r\n            return;\r\n        }\r\n        var ip = /^candidate:.+ (\\S+) \\d+ typ/.exec(e.candidate.candidate)[1];\r\n        if (ips.indexOf(ip) == -1) // avoid duplicate entries (tcp/udp)\r\n            ips.push(ip);\r\n    };\r\n    pc.createOffer(function(sdp) {\r\n        pc.setLocalDescription(sdp);\r\n    }, function onerror() {});\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nconst TitleContext = React.createContext()\r\n\r\nconst TitleProvider = ({children}) => {\r\n\r\n    const [shortTitle] = useState(\"НОИ 1\");\r\n    const [fullTitle] = useState(\"Национална олимпиада по информатика, общински кръг\");\r\n\r\n    useEffect(() => {\r\n        document.title = shortTitle;\r\n     }, [shortTitle]);\r\n\r\n    return (\r\n        <TitleContext.Provider\r\n            value={{\r\n                shortTitle: shortTitle,\r\n                fullTitle: fullTitle\r\n            }}>\r\n            {children}\r\n        </TitleContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nconst useTitle = () => React.useContext(TitleContext)\r\n\r\nexport { TitleProvider, useTitle }\r\n","import React from 'react'\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faSignOutAlt, faEnvelope, faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport { useAuth } from '../AuthContext'\r\nimport { useApp } from '../AppContext';\r\nimport { useTitle } from '../TitleContext';\r\n\r\nfunction Header() {\r\n  const title = useTitle().shortTitle;\r\n  const location = useLocation();\r\n  const unreadQuestions = useApp().unreadQuestions;\r\n  const unreadAnnouncements = useApp().unreadAnnouncements;\r\n  const markQuestionsSeen = useApp().markQuestionsSeen;\r\n  const markAnnouncementsSeen = useApp().markAnnouncementsSeen;\r\n\r\n  return (\r\n    <header className=\"main-header\">\r\n      <Link to=\"/\" className=\"logo\">\r\n        <span className=\"logo-mini\"><b>{title}</b></span>\r\n        <span className=\"logo-lg\">{title}</span>\r\n      </Link>\r\n      <nav className=\"navbar navbar-static-top\">\r\n        <div className=\"logo\" style={{width: 'auto', backgroundColor: 'rgba(255, 255, 255, 0)'}}>\r\n          {localStorage.getItem(\"name\")}, {localStorage.getItem(\"contest\")} група\r\n        </div>\r\n\r\n        <div className=\"navbar-custom-menu\">\r\n          <ul className=\"nav navbar-nav\">\r\n            <li className={location.pathname === '/' ? 'active' : ''}>\r\n              <Link to=\"/\" onClick={markAnnouncementsSeen}><FontAwesomeIcon icon={faBell} />\r\n                {unreadAnnouncements > 0 && <span className=\"label label-danger\">\r\n                  {unreadAnnouncements}\r\n                </span>}\r\n              </Link>\r\n            </li>\r\n            <li className={location.pathname === '/questions' ? 'active' : ''}>\r\n              <Link to=\"/questions\" onClick={markQuestionsSeen}><FontAwesomeIcon icon={faEnvelope} />\r\n                {unreadQuestions > 0 && <span className=\"label label-danger\">\r\n                  {unreadQuestions}\r\n                </span>}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\" onClick={useAuth().logout}><FontAwesomeIcon icon={faSignOutAlt} /></Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Countdown from 'react-countdown-now';\r\nimport { useApp } from '../AppContext';\r\n\r\nconst ContestCountdown = () => {\r\n    const time = useApp().time;\r\n   \r\n    return (\r\n        <div id=\"timer\" style={{ color: '#b8c7ce', textAlign: 'center', fontSize: '36px' }}>\r\n            {time && time.timeTillStart > 0 &&\r\n                <Countdown date={time.startTime} daysInHours={true} />\r\n            }\r\n            {time && time.timeTillStart <= 0 &&\r\n                <Countdown date={time.endTime} daysInHours={true} >\r\n                    <span>Състезанието приключи</span>\r\n                </Countdown>\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContestCountdown\r\n","import React from 'react'\r\nimport { useParams, useLocation } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { json } from '../rest'\r\nimport useAsync from '../useAsync'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFile, faBook, faHome, faQuestion } from '@fortawesome/free-solid-svg-icons'\r\nimport ContestCountdown from './ContestCountdown';\r\nimport { useApp } from '../AppContext';\r\n\r\nconst Sidebar = () => {\r\n  const { tid } = useParams();\r\n  const location = useLocation();\r\n  const contestIsRunning = useApp().contestIsRunning;\r\n  const contestIsFinished = useApp().contestIsFinished;\r\n  const unreadQuestions = useApp().unreadQuestions;\r\n  const unreadAnnouncements = useApp().unreadAnnouncements;\r\n  const markQuestionsSeen = useApp().markQuestionsSeen;\r\n  const markAnnouncementsSeen = useApp().markAnnouncementsSeen;\r\n\r\n  const { value: tasks, loading } = useAsync(json, 'tasks', [contestIsRunning]);\r\n\r\n  return (\r\n    <aside className=\"main-sidebar\">\r\n      <section className=\"sidebar\">\r\n        \r\n        <ContestCountdown />\r\n        <ul className=\"sidebar-menu tree\" data-widget=\"tree\">      \r\n          <li className=\"header\">МЕНЮ</li>\r\n          <li className={location.pathname === '/' ? 'active' : ''}>\r\n            <Link to=\"/\" onClick={markAnnouncementsSeen}>\r\n              <FontAwesomeIcon icon={faHome} /> &nbsp;<span>Начало</span>\r\n              {unreadAnnouncements > 0 && \r\n                <span className=\"pull-right-container\">\r\n                  <small className=\"label pull-right bg-red\">ново</small>\r\n                </span>\r\n              }\r\n            </Link>\r\n          </li>\r\n          <li className={location.pathname === '/questions' ? 'active' : ''}>\r\n            <Link to=\"/questions\" onClick={markQuestionsSeen}>\r\n              <FontAwesomeIcon icon={faQuestion} /> &nbsp;<span>Въпроси</span>\r\n              {unreadQuestions > 0 && \r\n                <span className=\"pull-right-container\">\r\n                  <small className=\"label pull-right bg-red\">ново</small>\r\n                </span>\r\n              }\r\n            </Link>\r\n          </li>\r\n \r\n          <li className=\"header\">ЗАДАЧИ</li>\r\n          {\r\n            (contestIsRunning || contestIsFinished) &&\r\n            !loading && tasks.map((t) => {\r\n              return <li key={t.number} className={t.number + \"\" === tid ? 'active' : ''}>\r\n                <Link to={`/task/${t.number}`}>\r\n                  <FontAwesomeIcon icon={faFile} /> &nbsp;<span>{t.name}</span>\r\n                </Link>\r\n              </li>\r\n          })}\r\n          <li className=\"header\">ДОКУМЕНТАЦИЯ</li>\r\n          <li>\r\n            <Link target=\"_blank\" to=\"/docs/en/index.html\">\r\n              <FontAwesomeIcon icon={faBook} /> &nbsp;<span>C++ Документация</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"main-footer\">\r\n      <strong>Copyright © 2018 <a href=\"mailto:pppepito86@gmail.com\">Petar Petrov</a>, <a href=\"mailto:shalamanov.marin@gmail.com\">Marin Shalamanov</a>.</strong> All rights\r\n      reserved.\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Verdict({verdict}) {\r\n  return (\r\n    <div>\r\n      {\r\n        verdict.slice().split(',').map((v, i) => {\r\n          const color = v === 'OK' ? 'label-success' :\r\n                        v === '?' ? 'label-default' :\r\n                        v === 'waiting' || v === 'judging' ? 'label-warning' :\r\n                        'label-danger';\r\n          const width = v === 'waiting' || v === 'judging' ? '50px' : '26px';\r\n          return <span key={i} className={`label ${color}`} \r\n              style={{display: 'inline-block', \r\n              width: width, \r\n              marginRight: '1px'}}>\r\n            {v}\r\n          </span>\r\n        })\r\n\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Verdict\r\n","import React from 'react'\r\n\r\nfunction getColor(ratio) {\r\n  return ratio === 1 ? '#4E9A05' :\r\n    ratio > 0.9 ? '#639B04' :\r\n      ratio > 0.8 ? '#789C03' :\r\n        ratio > 0.7 ? '#8E9D02' :\r\n          ratio > 0.6 ? '#A39E01' :\r\n            ratio > 0.5 ? '#B99F00' :\r\n              ratio > 0.4 ? '#C89100' :\r\n                ratio > 0.3 ? '#D17400' :\r\n                  ratio > 0.2 ? '#D95700' :\r\n                    ratio > 0.1 ? '#E23A00' :\r\n                      ratio > 0 ? '#EB1D00' :\r\n                        '#F40000';\r\n}\r\n  \r\nfunction getImage(ratio) {\r\n  return ratio === 1 ? 'linear-gradient(rgb(115, 210, 22), rgb(78, 154, 5))' :\r\n    ratio > 0.9 ? 'linear-gradient(rgb(137, 210, 18), rgb(99, 155, 4))' :\r\n      ratio > 0.8 ? 'linear-gradient(rgb(159, 210, 14), rgb(120, 156, 3))' :\r\n        ratio > 0.7 ? 'linear-gradient(rgb(181, 211, 10), rgb(142, 157, 2))' :\r\n          ratio > 0.6 ? 'linear-gradient(rgb(203, 211, 6), rgb(163, 158, 1))' :\r\n            ratio > 0.5 ? 'linear-gradient(rgb(225, 211, 2), rgb(185, 159, 0))' :\r\n              ratio > 0.4 ? 'linear-gradient(rgb(234, 192, 0), rgb(200, 145, 0))' :\r\n                ratio > 0.3 ? 'linear-gradient(rgb(228, 154, 0), rgb(209, 116, 0))' :\r\n                  ratio > 0.2 ? 'linear-gradient(rgb(222, 115, 0), rgb(217, 87, 0))' :\r\n                    ratio > 0.1 ? 'linear-gradient(rgb(216, 77, 0), rgb(226, 58, 0))' :\r\n                      ratio > 0 ? 'linear-gradient(rgb(210, 38, 0), rgb(235, 29, 0))' :\r\n                        'linear-gradient(rgb(204, 0, 0), rgb(244, 0, 0))';\r\n}\r\n  \r\nfunction ScoreBoardBox({ points, maxPoints, hovered }) {\r\n  if (!points) return <td />;\r\n\r\n  const ratio = points ? points * 1.0 / maxPoints : -1;\r\n  const color = getColor(ratio);\r\n  const image = hovered ? getImage(ratio) : undefined;\r\n  return (\r\n    <td style={{ padding: '0', whiteSpace: 'nowrap', verticalAlign: 'middle' }}>\r\n      <span className=\"btn btn-success\"\r\n        style={{\r\n          fontWeight: 'bold', width: '98%', padding: '0',\r\n          backgroundColor: color,\r\n          borderColor: color,\r\n          color: 'black',\r\n          backgroundImage: image,\r\n          cursor: 'auto'\r\n    }}>{points?points:\"N/A\"}</span></td>\r\n  )\r\n}\r\n\r\nexport default ScoreBoardBox;","import React, { useState } from 'react'\r\nimport { withRouter } from \"react-router\";\r\nimport ScoreBoardBox from './ScoreBoardBox';\r\n\r\nfunction ScoreboardTable() {\r\n  const [hover, setHover] = useState(0);\r\n  const data = [\r\n    { rank: 1, name: 'Кръстан Асенов Драганов', task1: 80, task2: 75, task3: 100, total: 255 },\r\n    { rank: 2, name: 'Кристина Валентинова Стоянова', task1: 100, task2: 20, task3: 100, total: 220 },\r\n    { rank: 3, name: 'Теодор Цветалинов Тотев', task1: 100, task2: 10, task3: 100, total: 210 },\r\n    { rank: 3, name: 'Борис Владимиров Михов', task1: 100, task2: 10, task3: 100, total: 210 },\r\n    { rank: 5, name: 'Георги Георгиев Славчев', task1: 100, task2: 10, task3: 40, total: 150 },\r\n    { rank: 6, name: 'Емилиана Иванова Димитрова', task1: 72, task2: 25, task3: 50, total: 147 },\r\n    { rank: 7, name: 'Александър Мирославов Гатев', task1: 88, task2: 10, task3: 40, total: 138 },\r\n    { rank: 8, name: 'Петър Велиславов Михов', task1: 92, task2: 0, task3: 40, total: 132 },\r\n    { rank: 9, name: 'Георги Николаев Илиев', task1: 80, task2: 45, task3: 0, total: 125 },\r\n    { rank: 10, name: 'Калоян Георгиев Еленков', task1: 92, task2: 10, task3: 20, total: 122 },\r\n    { rank: 11, name: 'Калоян Калинов Димитров', task1: 64, task2: 0, task3: 40, total: 104 },\r\n    { rank: 12, name: 'Мария Николаева Дренчева', task1: 64, task2: 25, task3: 0, total: 89 },\r\n    { rank: 13, name: 'Мартин Ивов Минков', task1: 76, task2: 0, task3: 10, total: 86 },\r\n    { rank: 14, name: 'Огнян Мирославов Йоргов', task1: 72, task2: 0, task3: 10, total: 82 },\r\n    { rank: 15, name: 'Богдан Людмилов Люцканов', task1: 72, task2: 0, task3: 0, total: 72 },\r\n    { rank: 16, name: 'Калоян Августинов Маринов', task1: 68, task2: 0, task3: 0, total: 68 },\r\n    { rank: 17, name: 'Иван Станимиров Атанасов', task1: 56, task2: 10, task3: 0, total: 66 },\r\n    { rank: 18, name: 'Мила Борисова Дачева', task1: 64, task2: 0, task3: 0, total: 64 },\r\n    { rank: 18, name: 'Лазар Иванов Тодоров', task1: 64, task2: 0, task3: 0, total: 64 },\r\n    { rank: 18, name: 'Александър Иванов Коджабашийски', task1: 64, task2: 0, task3: 0, total: 64 }\r\n  ];\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header\">\r\n        <h3 className=\"box-title\">Класиране</h3>\r\n\r\n        <div className=\"box-tools\">\r\n          <div className=\"input-group input-group-sm hidden-xs\" style={{ width: '150px' }}>\r\n            <input type=\"text\" name=\"table_search\" className=\"form-control pull-right\" placeholder=\"Search\" />\r\n\r\n            <div className=\"input-group-btn\">\r\n              <button type=\"submit\" className=\"btn btn-default\"><i className=\"fa fa-search\"></i></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"box-body table-responsive no-padding\">\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th width='10px'></th>\r\n              <th width='10px'>Място</th>\r\n              <th>Участник</th>\r\n              <th width='50px'>З.1</th>\r\n              <th width='50px'>З.2</th>\r\n              <th width='50px'>З.3</th>\r\n              <th width='75px'>Общо</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, i) => {\r\n              return (\r\n                <tr key={i} onMouseEnter={() => setHover(i)} onMouseLeave={() => setHover(-1)}>\r\n                  <td style={{ padding: '0' }}></td>\r\n                  <td style={{ padding: '0' }}><span style={{ padding: '0', marginLeft: '16px', fontWeight: 'bold' }}>{row.rank}</span></td>\r\n                  <td style={{ padding: '0' }}><span style={{ padding: '0', fontWeight: 'bold' }}>{row.name}</span></td>\r\n                  <ScoreBoardBox points={row.task1} maxPoints={100} hovered={hover === i} />\r\n                  <ScoreBoardBox points={row.task2} maxPoints={100} hovered={hover === i} />\r\n                  <ScoreBoardBox points={row.task3} maxPoints={100} hovered={hover === i} />\r\n                  <ScoreBoardBox points={row.total} maxPoints={300} hovered={hover === i} />\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(ScoreboardTable);\r\n","import React, { useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport useInterval from '../useInterval'\r\nimport moment from 'moment'\r\nimport { json, blob, post } from '../rest'\r\nimport Verdict from './Verdict';\r\nimport { useApp } from '../AppContext';\r\nimport Scoreboard from './Scoreboard';\r\nimport ScoreBoardBox from './ScoreBoardBox';\r\n\r\nvar FileSaver = require('file-saver');\r\n\r\nasync function download(tid) {\r\n  const contest = localStorage.getItem(\"contest\");\r\n  const name = (await json(`tasks/${tid}`)).name;\r\n  const data = await blob(`tasks/${tid}/pdf`);\r\n  const pdf = new Blob([data], { type: 'application/pdf' });\r\n  FileSaver.saveAs(pdf, `${contest}${tid}-${name}.pdf`);\r\n}\r\n\r\nfunction TaskDescription({ tid }) {\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header with-border\">\r\n        <h3 className=\"box-title\">Условие</h3>\r\n      </div>\r\n      <div className=\"box-body\">\r\n        <Link to={`/task/${tid}/pdf`} className=\"btn btn-info\" >Отвори</Link>\r\n        <button onClick={() => download(tid)} to={`/task/${tid}/pdf`} style={{ marginLeft: '3px' }} className=\"btn btn-info\">Изтегли</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TaskLimits({ time, memory }) {\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header with-border\">\r\n        <h3 className=\"box-title\">Ограничения</h3>\r\n      </div>\r\n      <div className=\"box-body\">\r\n        <table className=\"table table-bordered\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Време</td>\r\n              <td>{time} s</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Памет</td>\r\n              <td>{memory} MB</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TaskSubmit({ tid, nextSubmissionTime }) {\r\n  return (\r\n    <div className=\"nav-tabs-custom\" style={{ borderTop: '3px solid #d2d6de', borderBottom: '1px solid #f4f4f4' }}>\r\n      <ul className=\"nav nav-tabs pull-right\">\r\n        <li className=\"active\" style={{ marginTop: '-3px' }}><a href=\"#file-upload\" data-toggle=\"tab\">Файл</a></li>\r\n        <li style={{ marginTop: '-3px' }}><a href=\"#source-upload\" data-toggle=\"tab\">Код</a></li>\r\n        <li className=\"pull-left header\" style={{ fontSize: '18px' }}>Предай решение</li>\r\n      </ul>\r\n      <div className=\"tab-content no-padding\">\r\n        <div className=\"tab-pane active\" id=\"file-upload\" style={{ position: 'relative' }}>\r\n          <TaskSubmitFile tid={tid} nextSubmissionTime={nextSubmissionTime} />\r\n        </div>\r\n        <div className=\"tab-pane\" id=\"source-upload\" style={{ position: 'relative', height: 'auto' }}>\r\n          <TaskSubmitCode tid={tid} nextSubmissionTime={nextSubmissionTime} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TaskSubmitFile({ tid, nextSubmissionTime }) {\r\n  const history = useHistory();\r\n  const [file, setFile] = useState();\r\n\r\n  async function submit(e) {\r\n    e.preventDefault();\r\n    console.log(file);\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', new Blob([file]), file.name);\r\n    formData.append('ip', '127.0.0.1');\r\n\r\n    const data = await post(`tasks/${tid}/solutions`, formData);\r\n    history.push(`/task/${tid}/submission/${data.sid}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"box-body\">\r\n      <form method=\"post\" encType=\"multipart/form-data\" action=\"/user/submit-file\">\r\n        <div className=\"box-body\">\r\n\r\n          <input type=\"hidden\" className=\"form-control\" name=\"problemNumber\" id=\"problemNumber\" value=\"1\" />\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"file\">Файл</label>\r\n            <input onChange={(e)=>setFile(e.target.files[0])} type=\"file\" name=\"file\" id=\"file\" accept=\".cpp,.c\" />\r\n          </div>\r\n          <input type=\"hidden\" name=\"ip\" id=\"ip\" value=\"92ed92a0-4e42-4b8e-b686-a6eb0c1d80c9.local\" />\r\n        </div>\r\n\r\n        <SubmitButton submit={submit} nextSubmissionTime={nextSubmissionTime}/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TaskSubmitCode({ tid, nextSubmissionTime }) {\r\n  const history = useHistory();\r\n  const [code, setCode] = useState(\"\");\r\n  //const setError = useApp().setError;\r\n\r\n  async function submit(e) {\r\n    e.preventDefault();\r\n    if (!code || !code.trim().length) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('code', code);\r\n    formData.append('ip', '127.0.0.1');\r\n\r\n    //setError({topic:'Качването неуспешно!', message: 'Файлът е твърде голям'});\r\n    const data = await post(`tasks/${tid}/solutions`, formData);\r\n    history.push(`/task/${tid}/submission/${data.sid}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"box-body\">\r\n      <form method=\"post\" action=\"/\">\r\n        <div className=\"box-body\">\r\n          <input type=\"hidden\" className=\"form-control\" name=\"problemNumber\" id=\"problemNumber\" value=\"1\" />\r\n\r\n          <div className=\"form-group\">\r\n            <textarea onChange={(e) => setCode(e.target.value)} name=\"code\" placeholder=\"Поставете вашият код\" maxLength=\"65536\" style={{ width: '100%', height: '80px', fontSize: '14px', lineHeight: '18px', border: '1px solid #dddddd', padding: '10px' }}></textarea>\r\n          </div>\r\n          <input type=\"hidden\" name=\"ip\" id=\"ip\" value=\"92ed92a0-4e42-4b8e-b686-a6eb0c1d80c9.local\" />\r\n        </div>\r\n\r\n        <SubmitButton submit={submit} nextSubmissionTime={nextSubmissionTime}/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SubmitButton({submit, nextSubmissionTime}) {\r\n  const [currentTime, setCurrentTime] = useState(Date.now());\r\n\r\n  useInterval(() => {\r\n    setCurrentTime(Date.now());\r\n  }, currentTime < nextSubmissionTime ? 500 : null);\r\n\r\n  const secondsLeft = currentTime < nextSubmissionTime ? parseInt((nextSubmissionTime - currentTime)/1000+1, 10):0;\r\n  return (\r\n    <div className=\"box-footer\">\r\n      <button disabled={secondsLeft>0} type=\"submit\" onClick={e => submit(e)} id=\"submitcodebutton2\" className=\"btn btn-primary\">Предай</button>\r\n      {secondsLeft>0 && <span id=\"timetosubmit3\" style={{ marginLeft: '5px' }}>\r\n        {`след ${secondsLeft} секунд${secondsLeft !== 1 ? 'и':'а'}`}\r\n      </span>}\r\n     </div>\r\n    )\r\n}\r\n\r\nfunction TaskNoSubmissions() {\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header with-border\">\r\n        <h3 className=\"box-title\">Няма предадени решения</h3>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TaskSubmissions({ tid, submissions }) {\r\n  if (!submissions) return <TaskNoSubmissions/>\r\n  \r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header with-border\">\r\n        <h3 className=\"box-title\">Предадени решения{submissions.size}</h3>\r\n      </div>\r\n      <div className=\"box-body\">\r\n        <table className=\"table table-bordered\" style={{ tableLayout: 'fixed', wordWrap: 'break-word' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: '5%' }}>#</th>\r\n              <th style={{ width: '15%' }}>Час</th>\r\n              <th style={{ width: '70%' }}>Детайли</th>\r\n              <th style={{ width: '10%' }}>Точки</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              submissions.map((s, i) => {\r\n                return <tr key={i}>\r\n                  <td><Link to={`/task/${tid}/submission/${submissions.length - i}`}>{submissions.length - i}</Link></td>\r\n                  <td>{moment.unix(s.upload_time / 1000).format(\"DD MMM YYYY hh:mm:ss\")}</td>\r\n                  <td><Verdict verdict={s.verdict} /></td>\r\n                  <ScoreBoardBox points={s.points} maxPoints={100} hovered={false} />\r\n                </tr>\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default { TaskDescription, TaskLimits, TaskSubmit, TaskSubmissions }\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst LoadingContent = () => {\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '550px' }}>\r\n      <section className=\"content\">\r\n        <div className=\"overlay fa-3x\">\r\n          <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingContent\r\n","import { useState, useEffect } from 'react';\r\nimport { json } from './rest'\r\nimport useInterval from './useInterval';\r\n\r\nfunction useTask(tid) {\r\n    const [task, setTask] = useState(null);\r\n    const [submissions, setSubmissions] = useState(null);\r\n    const [nextSubmissionTime, setNextSubmissionTime] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function getResource() {\r\n            try {\r\n                setLoading(true);\r\n                setTask(null);\r\n                setSubmissions(null);\r\n                const task = await json(`tasks/${tid}`);\r\n                const submissions = await json(`tasks/${tid}/submissions`);\r\n                const timeLeft = await json(`timeToSubmit`);\r\n                setNextSubmissionTime(Date.now() + timeLeft.timeToSubmit);\r\n                setSubmissions(submissions);\r\n                setTask(task);\r\n            } catch (e) {\r\n                setError(e);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        getResource();\r\n    }, [tid]);\r\n\r\n    useInterval(async () => {\r\n        const submissions = await json(`tasks/${tid}/submissions`);\r\n        setSubmissions(submissions);\r\n    }, submissions && submissions.some(s => s.verdict==='waiting'||s.verdict==='judging') ? 5000 : null);\r\n    \r\n    return { task, submissions, nextSubmissionTime, error, loading };\r\n}\r\n\r\nexport default useTask;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport Task from './Task';\r\nimport LoadingContent from './LoadingContent';\r\nimport { json } from '../rest'\r\nimport useAsync from '../useAsync'\r\nimport { useApp } from '../AppContext';\r\nimport useTask from '../useTask';\r\n\r\nconst TaskContent = () => {\r\n  const contestIsRunning = useApp().contestIsRunning;\r\n  const contestIsFinished = useApp().contestIsFinished;\r\n\r\n  const { tid } = useParams();\r\n  const { task, submissions, nextSubmissionTime, loading } = useTask(tid);\r\n\r\n  if (loading || (!contestIsRunning && !contestIsFinished)) return <LoadingContent />\r\n\r\n  const points = submissions?submissions.reduce((prev, current) => Math.max(prev, current.points), 0) : 0;\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '550px' }}>\r\n      <section className=\"content-header\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h1 style={{ display: 'inline-block', verticalAlign: 'top' }}>Задача {tid} - <b>{task.name}</b></h1>\r\n        <div className=\"progress-group\" style={{ display: 'inline-block', height: '26px', verticalAlign: 'top', width: '48.5%' }}>\r\n          <span className=\"progress-text\">Точки от видими тестове</span>\r\n          <span className=\"progress-number\"><b>{points}</b>/100</span>\r\n\r\n          <div className=\"progress sm\">\r\n            <div className=\"progress-bar progress-bar-aqua\" style={{ width: points + '%' }}></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Task.TaskDescription tid={tid} />\r\n            {contestIsRunning && <Task.TaskLimits time={task.time} memory={task.memory} />}\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            {contestIsFinished && <Task.TaskLimits time={task.time} memory={task.memory} />}\r\n            {contestIsRunning && <Task.TaskSubmit tid={tid} nextSubmissionTime={nextSubmissionTime} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            {submissions && <Task.TaskSubmissions tid={tid} submissions={submissions} />}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskContent\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Verdict from './Verdict';\r\n\r\nfunction SubmissionOverview({ tid, submission }) {\r\n  return (\r\n    <div className=\"box-body\">\r\n      <table style={{ tableLayout: 'fixed', wordWrap: 'break-word' }} className=\"table table-bordered\">\r\n        <tbody>\r\n          <tr>\r\n            <th style={{ width: '15%' }}>Час</th>\r\n            <th style={{ width: '6%' }}>Група</th>\r\n            <th style={{ width: '10%' }}>Задача</th>\r\n            <th style={{ width: '6%' }}>Точки</th>\r\n            <th style={{ width: '63%' }}>Статус</th>\r\n          </tr>\r\n          <tr>\r\n            <td>{moment.unix(submission.upload_time / 1000).format(\"DD MMM YYYY hh:mm:ss\")}</td>\r\n            <td>{submission.contest}</td>\r\n            <td><Link to={`/task/${tid}`} >{submission.name}</Link></td>\r\n            <td>{submission.points}</td>\r\n            <td>\r\n              <Verdict verdict={submission.verdict} />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SubmissionDetails({ tests }) {\r\n  return (\r\n    <div className=\"box-body\">\r\n      <table style={{ tableLayout: 'fixed', wordWrap: 'break-word' }} className=\"table table-bordered table-striped\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Стъпка</th>\r\n            <th>Резултат</th>\r\n            <th>Време</th>\r\n          </tr>\r\n          {\r\n            tests.map((test, i) => {\r\n              const color = test.verdict === 'OK' ? '#00FF00' : test.verdict === 'HIDDEN' ? '#d2d6de' : '#ff0000';\r\n              return <tr key={i}>\r\n                <td>{test.name.replace('Test', 'Тест ')}</td>\r\n                <td style={{ backgroundColor: color }}>{test.verdict}</td>\r\n                <td>{test.time}</td>\r\n              </tr>\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SubmissionSource({ source }) {\r\n  return (\r\n    <pre>{source}</pre>\r\n  )\r\n}\r\n\r\nexport default { SubmissionOverview, SubmissionDetails, SubmissionSource }\r\n","import React, { useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport Submission from './Submission';\r\nimport LoadingContent from './LoadingContent';\r\nimport useAsync from '../useAsync'\r\nimport useInterval from '../useInterval'\r\nimport { json } from '../rest'\r\nimport { useApp } from '../AppContext';\r\n\r\nfunction SubmissionContent() {\r\n  const contestIsRunning = useApp().contestIsRunning;\r\n  const contestIsFinished = useApp().contestIsFinished;\r\n\r\n  const { tid, sid } = useParams();\r\n  const [refresh, setRefresh] = useState(0);\r\n  const { value: submission } = useAsync(json, `tasks/${tid}/solutions/${sid}`, [tid, sid, refresh]);\r\n\r\n  useInterval(() => {\r\n    setRefresh(refresh+1);\r\n  }, submission && !submission.points ? 5000 : null);\r\n\r\n  if ((!contestIsRunning && !contestIsFinished) || !submission) return <LoadingContent />\r\n\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '550px' }}>\r\n      <section className=\"content-header\">\r\n        <h1>\r\n          Решение\r\n          <small>детайли</small>\r\n        </h1>\r\n      </section>\r\n\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <section className=\"col-lg-12 connectedSortable ui-sortable\">\r\n            <div className=\"box\">\r\n              <Submission.SubmissionOverview tid={tid} submission={submission} />\r\n              {submission.tests && <Submission.SubmissionDetails tests={submission.tests} />}\r\n            </div>\r\n            <Submission.SubmissionSource source={submission.source} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmissionContent\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport LoadingContent from './LoadingContent';\r\nimport { blob } from '../rest'\r\nimport useAsync from '../useAsync'\r\n\r\nconst PdfContent = () => {\r\n  const { tid } = useParams();\r\n  const { value } = useAsync(blob, `tasks/${tid}/pdf`, [tid]);\r\n  const [pdf, setPdf] = useState();\r\n\r\n  useEffect(() => {\r\n    async function setResource() {\r\n      if (value) setPdf(URL.createObjectURL(value));\r\n    }\r\n\r\n    setResource();\r\n  }, [value]);\r\n\r\n  if (!value) return <LoadingContent />\r\n\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '498px' }}>\r\n      <content>\r\n        <object width='100%' height='530' data={pdf} type='application/pdf'><inner-text>pdf</inner-text></object>\r\n      </content>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfContent;\r\n","import React from 'react'\r\nimport ScoreboardTable from './Scoreboard'\r\n\r\nfunction ScoreboardContent() {\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '498px' }}>\r\n      <section className=\"content-header\">\r\n        <h1>\r\n          Е <b>група</b>\r\n        </h1>\r\n      </section>\r\n\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <ScoreboardTable />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreboardContent\r\n","import React from 'react';\r\nimport { useApp } from '../AppContext';\r\nimport {post} from '../rest';\r\nimport { json } from '../rest'\r\nimport useAsync from '../useAsync';\r\nimport LoadingContent from './LoadingContent';\r\n\r\nconst DashboardContent = () => {\r\n  const contestIsRunning = useApp().contestIsRunning;\r\n  const contestIsFinished = useApp().contestIsFinished;\r\n\r\n  const { value: tasks } = useAsync(json, `tasks/info`, [contestIsRunning]);\r\n\r\n  if (!tasks) return <LoadingContent />\r\n\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '550px' }}>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <Announcements />\r\n            {(contestIsRunning || contestIsFinished) && tasks && tasks.length > 0 && <TasksInfo tasks={tasks} />}\r\n          </div>\r\n\r\n        {(contestIsRunning || contestIsFinished) && tasks && tasks.length > 0 &&  <TasksPoints tasks={tasks} />}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SeenAnnouncement = ({id}) => {\r\n  const updateAnnouncements = useApp().updateAnnouncements;\r\n\r\n  const markAnnouncementSeen = async () => {\r\n    const formData = new FormData();\r\n    formData.append('id', id);\r\n\r\n    await post(`announcements/seen`, formData);\r\n    updateAnnouncements();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input name={id} onClick={markAnnouncementSeen} type=\"checkbox\" className=\"checkbox pull-left\" />\r\n      &nbsp;Прочетох\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nfunction Announcements() {\r\n  const announcements = useApp().announcements;\r\n  return (\r\n    <div>\r\n    {\r\n      announcements.slice().reverse().map((a) => {\r\n        return <div key={a.id} className={'callout callout-'+(a.seen?'info':'danger')}>\r\n          {a.topic && <h4>{a.topic}</h4>}\r\n          <p>{a.announcement}</p>\r\n          {!a.seen && false && <SeenAnnouncement id={a.id} />}\r\n        </div>\r\n    })}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TasksInfo({tasks}) {\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header with-border\">\r\n        <h3 className=\"box-title\">Ограничения</h3>\r\n      </div>\r\n      <div className=\"box-body table-responsive\">\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Задача</th>\r\n              <th>Време</th>\r\n              <th>Памет</th>\r\n              <th>Фийдбек</th>\r\n              <th>Събмити</th>\r\n            </tr>  \r\n          </thead>\r\n          <tbody>\r\n            {\r\n              tasks && tasks.map((t, i) => {\r\n                return <tr key={i}>\r\n                  <td>{t.name}</td>\r\n                  <td>{t.time?t.time+' s':'-'} </td>\r\n                  <td>{t.memory?t.memory+' MB':'-'}</td>\r\n                  <td>{t.feedback?t.feedback:'-'}</td>\r\n                  <td>{t.submissions?t.submissions:'-'}</td>\r\n                </tr>\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TasksPoints({tasks}) {\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <p className=\"text-center\">\r\n        <strong>Видими точки</strong>\r\n      </p>\r\n\r\n      {\r\n        tasks && tasks.map((t, i) => {\r\n          return <div key={i} className=\"progress-group\">\r\n            <span className=\"progress-text\">{t.name}</span>\r\n            <span className=\"progress-number\"><b>{t.publicScore}</b>/{t.maxPublicScore}</span>\r\n\r\n            <div className=\"progress sm\">\r\n              <div className=\"progress-bar progress-bar-aqua\" style={{ width: 100*t.publicScore/t.maxPublicScore+'%' }}></div>\r\n            </div>\r\n          </div>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardContent\r\n","import React, { useState } from 'react';\r\nimport useAsync from '../useAsync'\r\nimport {json, post} from '../rest'\r\nimport moment from 'moment'\r\nimport { useApp } from '../AppContext';\r\n\r\nconst ShowQuestion = ({ question }) => {\r\n  return (\r\n    <div>\r\n    <style>{'.direct-chat-new .right>.direct-chat-text{background:#d2d6de;border-color:#d2d6de;}.direct-chat-new .right>.direct-chat-text:after,.direct-chat-new .right>.direct-chat-text:before{content:none}'}</style>\r\n    <style>{'.direct-chat-new .left>.direct-chat-text{background:#3c8dbc;border-color:#3c8dbc;color:#fff}.direct-chat-new .left>.direct-chat-text:after,.direct-chat-new .left>.direct-chat-text:before{content:none}'}</style>\r\n\r\n    <div className={`${question.answer && !question.seen?'box-primary ':''}box direct-chat direct-chat-new`}>\r\n      <div style={question.seen?{backgroundColor: '#f4f4f4'}:{}} className=\"box-body\">\r\n        <div className=\"direct-chat-messages\" style={{height: 'auto'}}>\r\n          <div className=\"direct-chat-msg left\">\r\n            <div className=\"direct-chat-info clearfix\">\r\n              <span className=\"direct-chat-name pull-left\">Въпрос {question.topic==='избери'?'':' за ' +question.topic}</span>\r\n              <span className=\"direct-chat-timestamp pull-right\">\r\n                {moment.unix(question.time / 1000).format(\"DD MMM YYYY hh:mm:ss\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"direct-chat-text\">\r\n              {question.question}\r\n            </div>\r\n          </div>\r\n          {question.answer && \r\n          <div className=\"direct-chat-msg right\">\r\n            <div className=\"direct-chat-info clearfix\">\r\n              <div className=\"direct-chat-name pull-right\">Отговор</div>\r\n              <span className=\"direct-chat-timestamp pull-left\">\r\n                {moment.unix(question.answer_time / 1000).format(\"DD MMM YYYY hh:mm:ss\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"direct-chat-text\">\r\n              {question.answer}\r\n            </div>\r\n          </div>\r\n          }\r\n          {question.answer && !question.seen && false &&\r\n            <SeenQuestion id={question.id} />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SeenQuestion = ({id}) => {\r\n  const updateQuestions = useApp().updateQuestions;\r\n\r\n  const markQuestionSeen = async () => {\r\n    const formData = new FormData();\r\n    formData.append('id', id);\r\n\r\n    await post(`questions/seen`, formData);\r\n    updateQuestions();\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkbox pull-right\">\r\n      <label>\r\n        <input type=\"checkbox\" name={id} onClick={markQuestionSeen} /> Прочетох\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SendQuestion = () => {\r\n  const updateQuestions = useApp().updateQuestions;\r\n  const contestIsRunning = useApp().contestIsRunning;\r\n  const contestIsStarted = useApp().contestIsStarted;\r\n\r\n  const { value: tasks } = useAsync(json, 'tasks', [contestIsRunning]);\r\n  const [topic, setTopic] = useState(\"избери\");\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  const submitQuestion = async (e) => {\r\n    e.preventDefault();\r\n    if (!question || !question.trim().length) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('topic', topic);\r\n    formData.append('question', question);\r\n    formData.append('ip', '127.0.0.1');\r\n\r\n    await post(`questions`, formData);\r\n    setQuestion('');\r\n    updateQuestions();\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"box-header with-border\">\r\n        <h3 className=\"box-title\">Задай въпрос</h3>\r\n      </div>\r\n      <div className=\"box-body\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label>Тема</label>\r\n            <select onChange={(e) => setTopic(e.target.value)} value={topic} className=\"form-control\">\r\n              <option>избери</option>\r\n              {\r\n                tasks && tasks.map((t) => {\r\n                  return <option key={t.number} value={t.name}>{t.name}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Въпрос</label>\r\n            <textarea value={question} onChange={(e) => setQuestion(e.target.value)} className=\"form-control\" rows=\"5\" placeholder=\"Въведи...\"></textarea>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"box-footer\">\r\n        <button onClick={e => submitQuestion(e)} type=\"submit\" className=\"btn btn-primary\">Изпрати</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {ShowQuestion, SendQuestion}\r\n","import React from 'react';\r\nimport { ShowQuestion, SendQuestion } from './Questions';\r\nimport { useApp } from '../AppContext';\r\n\r\nconst QuestionsContent = () => {\r\n  const questions = useApp().questions;\r\n\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '550px' }}>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            {\r\n              questions.slice().reverse().map((q) => {\r\n                return <ShowQuestion key={q.id} question={q} />\r\n            })}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <SendQuestion />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionsContent\r\n","import React from 'react'\r\nimport { useApp } from '../AppContext';\r\n\r\nexport default function Modal() {\r\n  const error = useApp().error;\r\n  const setError = useApp().setError;\r\n\r\n  return (\r\n      <div>\r\n    {error &&\r\n    <div className='modal modal-info fade in modal-open' id=\"modal-default\" style={{display: 'block'}}>\r\n    <div className=\"modal-dialog\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <button type=\"button\" onClick={() => setError(null)} className=\"close\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 className=\"modal-title\">{error.topic}</h4>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>{error.message}</p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button type=\"button\" onClick={() => setError(null)} className=\"btn btn-default pull-left\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n  </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport useInterval from '../../useInterval'\r\nimport moment from 'moment'\r\nimport { json, blob, post } from '../../rest'\r\nimport { useApp } from '../../AppContext';\r\nimport Scoreboard from '../Scoreboard';\r\nimport ScoreBoardBox from '../ScoreBoardBox';\r\nimport Verdict from '../Verdict';\r\n\r\nfunction Workers() {\r\n  return (\r\n    <div className=\"nav-tabs-custom\" style={{ borderTop: '3px solid #d2d6de', borderBottom: '1px solid #f4f4f4' }}>\r\n      <ul className=\"nav nav-tabs pull-right\">\r\n        <li className=\"active\" style={{ marginTop: '-3px' }}><a href=\"#list-workers\" data-toggle=\"tab\">List</a></li>\r\n        <li style={{ marginTop: '-3px' }}><a href=\"#ensure-workers\" data-toggle=\"tab\">Ensure</a></li>\r\n        <li className=\"pull-left header\" style={{ fontSize: '18px' }}>Workers</li>\r\n      </ul>\r\n      <div className=\"tab-content no-padding\">\r\n        <div className=\"tab-pane\" id=\"ensure-workers\" style={{ position: 'relative' }}>\r\n          <EnsureWorkers />\r\n        </div>\r\n        <div className=\"tab-pane active\" id=\"list-workers\" style={{ position: 'relative', height: 'auto' }}>\r\n          <ListWorkers workers={[]} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction EnsureWorkers() {\r\n  return (\r\n    <div className=\"box-body\">\r\n      <form method=\"post\" encType=\"multipart/form-data\" action=\"/\">\r\n        <div className=\"box-body\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"count\">Count</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"count\" id=\"count\" placeholder=\"How many workers would you like?\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"box-footer\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Ensure</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SubmitButton({submit, timeToSubmit}) {\r\n  const [currentTime, setCurrentTime] = useState(Date.now());\r\n  const [submissionTime] = useState(currentTime + timeToSubmit);\r\n\r\n  useInterval(() => {\r\n    setCurrentTime(Date.now());\r\n  }, currentTime < submissionTime ? 1000 : null);\r\n\r\n  const secondssLeft = currentTime < submissionTime ? parseInt((submissionTime - currentTime)/1000+1, 10):0;\r\n  return (\r\n    <div className=\"box-footer\">\r\n      <button disabled={secondssLeft>0} type=\"submit\" onClick={e => submit(e)} id=\"submitcodebutton2\" className=\"btn btn-primary\">Предай</button>\r\n      {secondssLeft>0 && <span id=\"timetosubmit3\" style={{ marginLeft: '5px' }}>\r\n        {`след ${secondssLeft} секунд${secondssLeft !== 1 ? 'и':'а'}`}\r\n      </span>}\r\n     </div>\r\n    )\r\n}\r\n\r\nfunction ListWorkers({workers}) {\r\n  return (\r\n    <div className=\"box-body\">\r\n      {workers.length === 0 && <div>No workers</div>}\r\n\r\n      {workers.length !== 0 && \r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: '10px'}}>Id</th>\r\n              <th>Url</th>\r\n              <th>Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              workers.map((worker, i) => {\r\n                return <tr key={i}>\r\n                  <td>{worker.id}</td>\r\n                  <td>{worker.url}</td>\r\n                  <td>{worker.type}</td>\r\n                </tr>\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default { Workers }\r\n","import React from 'react';\r\nimport Workers from './Workers';\r\n\r\nconst AdminDashboardContent = () => {\r\n  return (\r\n    <div className=\"content-wrapper\" style={{ minHeight: '550px' }}>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Workers.Workers />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default AdminDashboardContent\r\n","import React from 'react'\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Footer from '../components/Footer';\r\nimport TaskContent from '../components/TaskContent';\r\nimport SubmissionContent from '../components/SubmissionContent';\r\nimport PdfContent from '../components/PdfContent';\r\nimport ScoreboardContent from '../components/ScoreboardContent';\r\nimport DashboardContent from '../components/DashboardContent';\r\nimport QuestionsContent from '../components/QuestionsContent';\r\nimport { AppProvider } from '../AppContext';\r\nimport Modal from '../components/Modal';\r\nimport AdminDashboardContent from '../components/admin/AdminDashboardContent';\r\n\r\nconst PageTemplate = ({ content }) => {\r\n    return (\r\n        <AppProvider>\r\n            <div className=\"wrapper\">\r\n                <Header />\r\n                <Sidebar />\r\n                {content === 'task' && <TaskContent />}\r\n                {content === 'submission' && <SubmissionContent />}\r\n                {content === 'pdf' && <PdfContent />}\r\n                {content === 'questions' && <QuestionsContent />}\r\n                {content === 'scoreboard' && <ScoreboardContent />}\r\n                {content === 'dashboard' && <DashboardContent />}\r\n                {content === 'admin' && <AdminDashboardContent />}\r\n                <Footer />\r\n                <Modal />\r\n            </div>\r\n        </AppProvider>\r\n    )\r\n}\r\n\r\nexport default PageTemplate\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faSignOutAlt, faEnvelope, faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport { useAuth } from '../../AuthContext'\r\nimport { useApp } from '../../AppContext';\r\nimport { useTitle } from '../../TitleContext';\r\n\r\nfunction AdminHeader() {\r\n  const title = useTitle().shortTitle;\r\n  const unreadQuestions = useApp().unreadQuestions;\r\n  const unreadAnnouncements = useApp().unreadAnnouncements;\r\n\r\n  return (\r\n    <header className=\"main-header\">\r\n      <Link to=\"/\" className=\"logo\">\r\n  <span className=\"logo-mini\"><b>{title}</b></span>\r\n        <span className=\"logo-lg\">{title}</span>\r\n      </Link>\r\n      <nav className=\"navbar navbar-static-top\">\r\n        <div className=\"logo\" style={{width: 'auto', backgroundColor: 'rgba(255, 255, 255, 0)'}}>\r\n          {localStorage.getItem(\"name\")}, {localStorage.getItem(\"contest\")} група\r\n        </div>\r\n\r\n        <div className=\"navbar-custom-menu\">\r\n          <ul className=\"nav navbar-nav\">\r\n            <li>\r\n              <Link to=\"/\"><FontAwesomeIcon icon={faBell} />\r\n                {unreadAnnouncements > 0 && <span className=\"label label-danger\">\r\n                  {unreadAnnouncements}\r\n                </span>}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/questions\"><FontAwesomeIcon icon={faEnvelope} />\r\n                {unreadQuestions > 0 && <span className=\"label label-danger\">\r\n                  {unreadQuestions}\r\n                </span>}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\" onClick={useAuth().logout}><FontAwesomeIcon icon={faSignOutAlt} /></Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\nimport { useParams, useLocation } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { json } from '../../rest'\r\nimport useAsync from '../../useAsync'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFile, faBook, faHome, faQuestion } from '@fortawesome/free-solid-svg-icons'\r\nimport ContestCountdown from '../ContestCountdown';\r\nimport { useApp } from '../../AppContext';\r\n\r\nconst AdminSidebar = () => {\r\n  const { tid } = useParams();\r\n  const location = useLocation();\r\n  const { value: tasks, loading } = useAsync(json, 'tasks', []);\r\n  const contestIsRunning = useApp().contestIsRunning;\r\n  const contestIsFinished = useApp().contestIsFinished;\r\n  const unreadQuestions = useApp().unreadQuestions;\r\n  const unreadAnnouncements = useApp().unreadAnnouncements;\r\n\r\n  return (\r\n    <aside className=\"main-sidebar\">\r\n      <section className=\"sidebar\">\r\n        \r\n        <ContestCountdown />\r\n        <ul className=\"sidebar-menu tree\" data-widget=\"tree\">      \r\n          <li className=\"header\">МЕНЮ</li>\r\n          <li className={location.pathname === '/admin' ? 'active' : ''}>\r\n            <Link to=\"/admin\">\r\n              <FontAwesomeIcon icon={faHome} /> &nbsp;<span>Начало</span>\r\n            </Link>\r\n          </li>\r\n          <li className={location.pathname === '/admin/contests' ? 'active' : ''}>\r\n            <Link to=\"/admin/contests\">\r\n              <FontAwesomeIcon icon={faHome} /> &nbsp;<span>Състезания</span>\r\n            </Link>\r\n          </li>\r\n          <li className={location.pathname === '/admin/submissions' ? 'active' : ''}>\r\n            <Link to=\"/admin/submissions\">\r\n              <FontAwesomeIcon icon={faHome} /> &nbsp;<span>Решения</span>\r\n            </Link>\r\n          </li>\r\n          <li className={location.pathname === '/admin/results' ? 'active' : ''}>\r\n            <Link to=\"/admin/results\">\r\n              <FontAwesomeIcon icon={faHome} /> &nbsp;<span>Резултати</span>\r\n            </Link>\r\n          </li>\r\n          <li className={location.pathname === '/admin/users' ? 'active' : ''}>\r\n            <Link to=\"/admin/users\">\r\n              <FontAwesomeIcon icon={faHome} /> &nbsp;<span>Състезатели</span>\r\n            </Link>\r\n          </li>\r\n          <li className={location.pathname === '/admin/questions' ? 'active' : ''}>\r\n            <Link to=\"/admin/questions\">\r\n              <FontAwesomeIcon icon={faQuestion} /> &nbsp;<span>Въпроси</span>\r\n              {unreadQuestions > 0 && \r\n                <span className=\"pull-right-container\">\r\n                  <small className=\"label pull-right bg-red\">new</small>\r\n                </span>\r\n              }\r\n            </Link>\r\n          </li>\r\n         </ul>\r\n      </section>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default AdminSidebar\r\n","import React from 'react'\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Footer from '../components/Footer';\r\nimport TaskContent from '../components/TaskContent';\r\nimport SubmissionContent from '../components/SubmissionContent';\r\nimport PdfContent from '../components/PdfContent';\r\nimport ScoreboardContent from '../components/ScoreboardContent';\r\nimport DashboardContent from '../components/DashboardContent';\r\nimport QuestionsContent from '../components/QuestionsContent';\r\nimport { AppProvider } from '../AppContext';\r\nimport Modal from '../components/Modal';\r\nimport AdminDashboardContent from '../components/admin/AdminDashboardContent';\r\nimport AdminHeader from '../components/admin/AdminHeader';\r\nimport AdminSidebar from '../components/admin/AdminSidebar';\r\n\r\nconst AdminPageTemplate = ({ content }) => {\r\n    return (\r\n        <AppProvider>\r\n            <div className=\"wrapper\">\r\n                <AdminHeader />\r\n                <AdminSidebar />\r\n                {content === 'task' && <TaskContent />}\r\n                {content === 'submission' && <SubmissionContent />}\r\n                {content === 'pdf' && <PdfContent />}\r\n                {content === 'questions' && <QuestionsContent />}\r\n                {content === 'scoreboard' && <ScoreboardContent />}\r\n                {content === 'dashboard' && <DashboardContent />}\r\n                {content === 'admin' && <AdminDashboardContent />}\r\n                <Footer />\r\n                <Modal />\r\n            </div>\r\n        </AppProvider>\r\n    )\r\n}\r\n\r\nexport default AdminPageTemplate\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport PageTemplate from './pages/PageTemplate'\r\nimport AdminPageTemplate from './pages/AdminPageTemplate';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path=\"/task/:tid(\\d+)/submission/:sid(\\d+)\" render={() => <PageTemplate content=\"submission\" />} />\r\n            <Route path=\"/task/:tid(\\d+)/pdf\" render={() => <PageTemplate content=\"pdf\" />} />\r\n            <Route path=\"/task/:tid(\\d+)\" render={() => <PageTemplate content=\"task\" />} />            \r\n            <Route path=\"/questions\" render={() => <PageTemplate content=\"questions\" />} />\r\n            <Route path=\"/scoreboard/:gid\" render={() => <PageTemplate content=\"scoreboard\" />} />\r\n            <Route path=\"/admin/dashboard\" render={() => <AdminPageTemplate content=\"admin\" />} />\r\n            <Route path=\"/\" render={() => <PageTemplate content=\"dashboard\" />} />\r\n\r\n            <Route render={() => <Redirect to=\"/task/1\" />} />\r\n        </Switch>\r\n    </Router>\r\n\r\n);\r\n\r\nexport { };","import React, { useState } from 'react';\r\nimport { useAuth } from '../AuthContext'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faKey, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { useTitle } from '../TitleContext';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const login = useAuth().login;\r\n\r\n  const handleLogin = React.useCallback((e) => {\r\n    e.preventDefault();\r\n    login(username, password)\r\n  }, [login, username, password])\r\n\r\n  const title = useTitle().fullTitle;\r\n\r\n  return (\r\n    <div style={{ height: '100%', background: '#d2d6de', transition: 'none', OTransition: 'none', WebkitTransition: 'none' }}>\r\n      <div className=\"login-box\" style={{ margin: '0 auto', paddingTop: '7%', minHeight: '550px'}}>\r\n        <div className=\"login-logo\">\r\n          <a href=\"/\"><b>{title}</b></a>\r\n        </div>\r\n        <div className=\"login-box-body\">\r\n\r\n          <form method=\"post\" action=\"\">\r\n            <div className=\"form-group has-feedback\">\r\n              <input type=\"text\" className=\"form-control\" onChange={(e) => setUsername(e.target.value)} placeholder=\"Име\" name=\"username\" value={username} />\r\n              <FontAwesomeIcon icon={faUser} style={{marginRight: '10px'}} className=\"form-control-feedback\" />\r\n            </div>\r\n            <div className=\"form-group has-feedback\">\r\n              <input type=\"password\" className=\"form-control\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Парола\" name=\"password\" value={password} />\r\n              <FontAwesomeIcon icon={faKey} style={{marginRight: '10px'}} className=\"form-control-feedback\" />\r\n            </div>\r\n            <input type=\"hidden\" name=\"ip\" id=\"ip\" value=\"382c5697-ca1c-47f8-af60-79156c17bb5a.local\" />\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-8\">\r\n                <div className=\"checkbox icheck\">\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-4\">\r\n                <button onClick={handleLogin} className=\"btn btn-primary btn-block btn-flat\">Вход</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Login\r\n","import React from 'react';\nimport './App.css';\nimport { useAuth } from './AuthContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './pages/Login';\n\nfunction App() {\n  const isAuth = useAuth().isAuth;\n  return isAuth ? <ProtectedRoute /> : <Login />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AuthProvider } from './AuthContext';\nimport { TitleProvider } from './TitleContext';\n\nReactDOM.render(\n    <TitleProvider>\n        <AuthProvider>\n            <App />\n        </AuthProvider>\n    </TitleProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}